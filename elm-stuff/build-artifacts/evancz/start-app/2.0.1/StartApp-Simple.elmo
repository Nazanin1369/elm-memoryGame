Elm.StartApp = Elm.StartApp || {};
Elm.StartApp.Simple = Elm.StartApp.Simple || {};
Elm.StartApp.Simple.make = function (_elm) {
   "use strict";
   _elm.StartApp = _elm.StartApp || {};
   _elm.StartApp.Simple = _elm.StartApp.Simple || {};
   if (_elm.StartApp.Simple.values)
   return _elm.StartApp.Simple.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "StartApp.Simple",
   $Basics = Elm.Basics.make(_elm),
   $Html = Elm.Html.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm);
   var start = function (config) {
      return function () {
         var actions = $Signal.mailbox($Maybe.Nothing);
         var address = A2($Signal.forwardTo,
         actions.address,
         $Maybe.Just);
         var model = A3($Signal.foldp,
         F2(function (_v0,model) {
            return function () {
               switch (_v0.ctor)
               {case "Just":
                  return A2(config.update,
                    _v0._0,
                    model);}
               _U.badCase($moduleName,
               "on line 91, column 34 to 60");
            }();
         }),
         config.model,
         actions.signal);
         return A2($Signal.map,
         config.view(address),
         model);
      }();
   };
   var Config = F3(function (a,
   b,
   c) {
      return {_: {}
             ,model: a
             ,update: c
             ,view: b};
   });
   _elm.StartApp.Simple.values = {_op: _op
                                 ,Config: Config
                                 ,start: start};
   return _elm.StartApp.Simple.values;
};