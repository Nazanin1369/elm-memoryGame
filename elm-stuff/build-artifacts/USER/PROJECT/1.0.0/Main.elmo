Elm.Main = Elm.Main || {};
Elm.Main.make = function (_elm) {
   "use strict";
   _elm.Main = _elm.Main || {};
   if (_elm.Main.values)
   return _elm.Main.values;
   var _op = {},
   _N = Elm.Native,
   _U = _N.Utils.make(_elm),
   _L = _N.List.make(_elm),
   $moduleName = "Main",
   $Basics = Elm.Basics.make(_elm),
   $Card = Elm.Card.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Attributes = Elm.Html.Attributes.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $StartApp$Simple = Elm.StartApp.Simple.make(_elm),
   $String = Elm.String.make(_elm);
   var areIdentical = function (list) {
      return function () {
         var l = $List.length(list);
         var f = $List.head(list);
         return function () {
            var _v0 = {ctor: "_Tuple2"
                      ,_0: l
                      ,_1: f};
            switch (_v0.ctor)
            {case "_Tuple2": switch (_v0._0)
                 {case 2: switch (_v0._1.ctor)
                      {case "Just":
                         return A2($List.all,
                           function (x) {
                              return A2($String.contains,
                              x.image,
                              _v0._1._0.image);
                           },
                           list);}
                      break;}
                 return false;}
            _U.badCase($moduleName,
            "between lines 58 and 60");
         }();
      }();
   };
   var lockIfIdentical = F2(function (model,
   list) {
      return function () {
         var identical = areIdentical(list);
         return function () {
            switch (identical)
            {case false: return model;
               case true: return A2($List.map,
                 function (cmodel) {
                    return $Card.isOpen(cmodel) ? $Card.lock(cmodel) : cmodel;
                 },
                 model);}
            _U.badCase($moduleName,
            "between lines 68 and 75");
         }();
      }();
   });
   var openImages = function (model) {
      return A3($List.foldr,
      F2(function (m,i) {
         return $Card.isOpen(m) ? A2($List._op["::"],
         m,
         i) : i;
      }),
      _L.fromArray([]),
      model);
   };
   var update = F2(function (action,
   model) {
      return function () {
         var opened = openImages(model);
         var openedCount = $List.length(opened);
         return function () {
            switch (action.ctor)
            {case "Do":
               return $List.map(function (cModel) {
                    return function () {
                       var _v8 = {ctor: "_Tuple2"
                                 ,_0: openedCount
                                 ,_1: cModel.id};
                       switch (_v8.ctor)
                       {case "_Tuple2":
                          return _U.eq(_v8._1,
                            action._0) ? A2($Card.update,
                            action._1,
                            cModel) : _U.eq(_v8._0,
                            2) ? $Card.close(cModel) : cModel;}
                       _U.badCase($moduleName,
                       "between lines 87 and 95");
                    }();
                 })(A2(lockIfIdentical,
                 model,
                 opened));}
            _U.badCase($moduleName,
            "between lines 84 and 95");
         }();
      }();
   });
   var containerStyle = $Html$Attributes.style(_L.fromArray([{ctor: "_Tuple2"
                                                             ,_0: "width"
                                                             ,_1: "290px"}
                                                            ,{ctor: "_Tuple2"
                                                             ,_0: "height"
                                                             ,_1: "290px"}
                                                            ,{ctor: "_Tuple2"
                                                             ,_0: "margin"
                                                             ,_1: "80px 500px 0px 500px"}]));
   var init = A2($List.map,
   function (index) {
      return A2($Card.initialModel,
      A2($Basics._op["++"],
      $Basics.toString(A2($Basics._op["%"],
      index,
      8)),
      ".svg"),
      index);
   },
   _L.range(1,16));
   var Do = F2(function (a,b) {
      return {ctor: "Do"
             ,_0: a
             ,_1: b};
   });
   var view = F2(function (address,
   model) {
      return A2($Html.div,
      _L.fromArray([containerStyle]),
      A2($List.map,
      function (cModel) {
         return A2($Card.view,
         A2($Signal.forwardTo,
         address,
         Do(cModel.id)),
         cModel);
      },
      model));
   });
   var main = $StartApp$Simple.start({_: {}
                                     ,model: init
                                     ,update: update
                                     ,view: view});
   _elm.Main.values = {_op: _op
                      ,main: main
                      ,Do: Do
                      ,init: init
                      ,containerStyle: containerStyle
                      ,view: view
                      ,openImages: openImages
                      ,areIdentical: areIdentical
                      ,lockIfIdentical: lockIfIdentical
                      ,update: update};
   return _elm.Main.values;
};